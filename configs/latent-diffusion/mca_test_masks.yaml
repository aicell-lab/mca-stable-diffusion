model:
  base_learning_rate: 7.44e-5 #1 #5.0e-5   # set to target_lr by starting main.py with '--scale_lr False'
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    #ckpt_path: /proj/aicell/data/stable-diffusion/mca/logs/2024-03-14T15-56-18_mca_test/checkpoints/last.ckpt
    linear_start: 0.0015
    linear_end: 0.0155
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    loss_type: l1
    first_stage_key: "image"
    cond_stage_key: "labels_and_mask" # the key in the dataset for feeding into the condition model
    image_size: 64
    channels: 6
    cond_stage_trainable: true
    #cond_stage_forward: true
    concat_mode: true # this will set conditioning_key to "crossattn" if not exists
    conditioning_key: hybrid # change to add the labels for mca
    scale_by_std: true
    monitor: 'val/loss_simple_ema'
    cond_dropout: 0.1

    #scheduler_config: # 10000 warmup steps
    #   target: ldm.lr_scheduler.LambdaLinearScheduler
    #   params:
    #     warm_up_steps: [500, 500, 500, 500, 500]
    #     cycle_lengths: [1000, 1000, 1000, 1000, 100]
    #     f_start: [5.e-6, 5.e-6, 5.e-6, 5.e-6, 5.e-6]
    #     f_max: [ 1.e-5, 1.e-5, 1.e-5, 1.e-5, 1.e-5]
    #     f_min: [ 1.e-6, 1.e-6, 1.e-6, 1.e-6, 1.e-6 ]

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 64 # 256/4
        in_channels: 6 
        out_channels: 3
        model_channels: 192
        attention_resolutions: [ 1, 2, 4, 8 ]   # 32, 16, 8, 4
        num_res_blocks: 2
        channel_mult: [ 1, 2, 2, 4, 4 ]  # 32, 16, 8, 4, 2
        num_heads: 8
        use_scale_shift_norm: True
        resblock_updown: True
        use_spatial_transformer: True
        context_dim: 128 # must match the output of MCAConditionEmbedders label embedder

    first_stage_config:
      target: ldm.models.autoencoder.VQModelInterface
      params:
        embed_dim: 3
        n_embed: 8192
        # pretrained autoencoder
        ckpt_path: /data/ethyni/mca/checkpoints/autoencoder_best.ckpt
        ddconfig:
          double_z: false
          z_channels: 3
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity

    cond_stage_config:
      target: ldm.data.mca.MCAConditionEmbedder
      params:
        hidden_layers: [128, 256]
        output_size_context_dim: 128
        one_hot_all_labels: False
        concat_mode: True
        image_embedding_model:
          target: ldm.models.autoencoder.VQModelInterface
          params:
            embed_dim: 3
            n_embed: 8192
            # pretrained autoencoder
            ckpt_path: /data/ethyni/mca/checkpoints/autoencoder_best.ckpt
            ddconfig:
              double_z: false
              z_channels: 3
              resolution: 256
              in_channels: 3
              out_ch: 3
              ch: 128
              ch_mult:
              - 1
              - 2
              - 4
              num_res_blocks: 2
              attn_resolutions: []
              dropout: 0.0
            lossconfig:
              target: torch.nn.Identity
        


data:
  target: main.DataModuleFromConfig
  params:
    batch_size: 4
    #num_workers: 16 # disable multiprocessing
    wrap: True # used to be True
    train:
      target: ldm.data.mca.MCACombineDataset
      params:
        directories: "/data/ethyni/mca/mitotic_cell_atlas_v1.0.1_exampledata/Data_tifs"
        cell_features: /data/ethyni/mca/cell_features_necessary_columns.txt
        group: 'train' 
        use_cached_paths: True 
        cached_paths: /data/ethyni/stable-diffusion/ldm/data/europa-paths.json   
        normalization: True
        random_angle: True
        return_masks: True

   
lightning:
  callbacks:
    image_logger:
      target: ldm.callbacks.ImageLogger
      params:
        batch_frequency: 10
        max_images: 4
        increase_log_steps: false
        log_images_kwargs:
          ddim_steps: 100
          quantize_denoised: true
          inpaint: false
          plot_denoise_rows: true
          plot_progressive_rows: true
          plot_diffusion_rows: true
          plot_inputs: true
          plot_reconstructions: true
          mix_sample: false
          n_row: 4

  trainer:
    benchmark: True
    accelerator: dp # need to change to dp because the default ddp will free the training
    # limit_val_batches: 100
    fast_dev_run: True 
    #profiler: pytorch
    #limit_train_batches: 11
    #max_epochs: 1
    #limit_val_batches: 1
    #resume_from_checkpoint: "/data/ethyni/stable-diffusion/logs/2024-03-20T13-16-16_mca_test/checkpoints/last.ckpt"